{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-webpack-project/./src/components/base/api.ts","webpack://my-webpack-project/./src/components/model/Catalog.ts","webpack://my-webpack-project/./src/components/model/OrderBuilder.ts","webpack://my-webpack-project/./src/utils/utils.ts","webpack://my-webpack-project/./src/components/view/Component.ts","webpack://my-webpack-project/./src/components/view/Basket.ts","webpack://my-webpack-project/./src/utils/constants.ts","webpack://my-webpack-project/./src/components/view/Card.ts","webpack://my-webpack-project/./src/components/view/Form.ts","webpack://my-webpack-project/./src/components/view/Gallery.ts","webpack://my-webpack-project/./src/components/view/Modal.ts","webpack://my-webpack-project/./src/components/view/Poster.ts","webpack://my-webpack-project/./src/index.ts"],"sourcesContent":["export class Api {\n    constructor(baseUrl, options = {}) {\n        var _a;\n        this.baseUrl = baseUrl;\n        this.options = {\n            headers: Object.assign({ 'Content-Type': 'application/json' }, ((_a = options.headers) !== null && _a !== void 0 ? _a : {}))\n        };\n    }\n    handleResponse(response) {\n        if (response.ok)\n            return response.json();\n        else\n            return response.json()\n                .then(data => { var _a; return Promise.reject((_a = data.error) !== null && _a !== void 0 ? _a : response.statusText); });\n    }\n    get(uri) {\n        return fetch(this.baseUrl + uri, Object.assign(Object.assign({}, this.options), { method: 'GET' })).then(this.handleResponse);\n    }\n    post(uri, data, method = 'POST') {\n        return fetch(this.baseUrl + uri, Object.assign(Object.assign({}, this.options), { method, body: JSON.stringify(data) })).then(this.handleResponse);\n    }\n}\n","/**\n * Класс предоставляет данные для отображения.\n */\nexport class Catalog {\n    constructor(data) {\n        this.items = [];\n        this.itemsCount = 0;\n        this.items = data.items;\n        this.itemsCount = data.total;\n    }\n    setCatalog(items) {\n        this.items = items;\n    }\n}\n","/**\n * Класс заказа.\n */\nclass Order {\n    constructor(products = [], paymentType = '', deliveryAdress = '', email = '', phone = 0, totalPrice = 0) {\n        this.products = products;\n        this.paymentType = paymentType;\n        this.deliveryAdress = deliveryAdress;\n        this.email = email;\n        this.phone = phone;\n        this.totalPrice = totalPrice;\n    }\n}\n/**\n * Билдер собирает экземпляр класса Order по частям.\n * @param order - объект типа Order, который мы собираем\n */\nexport class OrderBuilder {\n    constructor() {\n        this.order = new Order();\n    }\n    get totalPrice() {\n        return (this.order.products.reduce((sum, element) => {\n            return sum + element.price;\n        }, 0));\n    }\n    get totalCount() {\n        return this.order.products.length;\n    }\n    addProducts(value) {\n        this.order.products.push(value);\n        return this;\n    }\n    removeProduct(id) {\n        this.order.products = this.order.products.filter((item) => {\n            return item.id !== id;\n        });\n        return this;\n    }\n    setPaymentType(value) {\n        this.order.paymentType = value;\n        return this;\n    }\n    setDeliveryAdress(value) {\n        this.order.deliveryAdress = value;\n        return this;\n    }\n    setEmail(value) {\n        this.order.email = value;\n        return this;\n    }\n    setPhone(value) {\n        this.order.phone = value;\n        return this;\n    }\n    // for debugging =======================\n    showOrder() {\n        console.log(this.order);\n        return this;\n    }\n    //========================================\n    createOrder() {\n        return this.order;\n    }\n}\n","export function pascalToKebab(value) {\n    return value.replace(/([a-z0–9])([A-Z])/g, \"$1-$2\").toLowerCase();\n}\nexport function isSelector(x) {\n    return (typeof x === \"string\") && x.length > 1;\n}\nexport function isEmpty(value) {\n    return value === null || value === undefined;\n}\nexport function ensureAllElements(selectorElement, context = document) {\n    if (isSelector(selectorElement)) {\n        return Array.from(context.querySelectorAll(selectorElement));\n    }\n    if (selectorElement instanceof NodeList) {\n        return Array.from(selectorElement);\n    }\n    if (Array.isArray(selectorElement)) {\n        return selectorElement;\n    }\n    throw new Error(`Unknown selector element`);\n}\nexport function ensureElement(selectorElement, context) {\n    if (isSelector(selectorElement)) {\n        const elements = ensureAllElements(selectorElement, context);\n        if (elements.length > 1) {\n            console.warn(`selector ${selectorElement} return more then one element`);\n        }\n        if (elements.length === 0) {\n            throw new Error(`selector ${selectorElement} return nothing`);\n        }\n        return elements.pop();\n    }\n    if (selectorElement instanceof HTMLElement) {\n        return selectorElement;\n    }\n    throw new Error('Unknown selector element');\n}\nexport function cloneTemplate(query) {\n    const template = ensureElement(query);\n    return template.content.firstElementChild.cloneNode(true);\n}\nexport function bem(block, element, modifier) {\n    let name = block;\n    if (element)\n        name += `__${element}`;\n    if (modifier)\n        name += `_${modifier}`;\n    return {\n        name,\n        class: `.${name}`\n    };\n}\nexport function getObjectProperties(obj, filter) {\n    return Object.entries(Object.getOwnPropertyDescriptors(Object.getPrototypeOf(obj)))\n        .filter(([name, prop]) => filter ? filter(name, prop) : (name !== 'constructor'))\n        .map(([name, prop]) => name);\n}\n/**\n * Устанавливает dataset атрибуты элемента\n */\nexport function setElementData(el, data) {\n    for (const key in data) {\n        el.dataset[key] = String(data[key]);\n    }\n}\n/**\n * Получает типизированные данные из dataset атрибутов элемента\n */\nexport function getElementData(el, scheme) {\n    const data = {};\n    for (const key in el.dataset) {\n        data[key] = scheme[key](el.dataset[key]);\n    }\n    return data;\n}\n/**\n * Проверка на простой объект\n */\nexport function isPlainObject(obj) {\n    const prototype = Object.getPrototypeOf(obj);\n    return prototype === Object.getPrototypeOf({}) ||\n        prototype === null;\n}\nexport function isBoolean(v) {\n    return typeof v === 'boolean';\n}\n/**\n * Фабрика DOM-элементов в простейшей реализации\n * здесь не учтено много факторов\n * в интернет можно найти более полные реализации\n */\nexport function createElement(tagName, props, children) {\n    const element = document.createElement(tagName);\n    if (props) {\n        for (const key in props) {\n            const value = props[key];\n            if (isPlainObject(value) && key === 'dataset') {\n                setElementData(element, value);\n            }\n            else {\n                // @ts-expect-error fix indexing later\n                element[key] = isBoolean(value) ? value : String(value);\n            }\n        }\n    }\n    if (children) {\n        for (const child of Array.isArray(children) ? children : [children]) {\n            element.append(child);\n        }\n    }\n    return element;\n}\n","/**\n * Базовый компонент\n */\nexport class Component {\n    constructor(container) {\n        this.container = container;\n        // Учитывайте что код в конструкторе исполняется ДО всех объявлений в дочернем классе\n    }\n    // Инструментарий для работы с DOM в дочерних компонентах\n    // Переключить класс\n    toggleClass(element, className, force) {\n        element.classList.toggle(className, force);\n    }\n    // Установить текстовое содержимое\n    setText(element, value) {\n        if (element) {\n            element.textContent = String(value);\n        }\n    }\n    // Сменить статус блокировки\n    setDisabled(element, state) {\n        if (element) {\n            if (state)\n                element.setAttribute('disabled', 'disabled');\n            else\n                element.removeAttribute('disabled');\n        }\n    }\n    // Скрыть\n    setHidden(element) {\n        element.style.display = 'none';\n    }\n    // Показать\n    setVisible(element) {\n        element.style.removeProperty('display');\n    }\n    // Установить изображение с альтернативным текстом\n    setImage(element, src, alt) {\n        if (element) {\n            element.src = src;\n            if (alt) {\n                element.alt = alt;\n            }\n        }\n    }\n    // Вернуть корневой DOM-элемент\n    render(data) {\n        Object.assign(this, data !== null && data !== void 0 ? data : {});\n        return this.container;\n    }\n}\n","import { ensureElement } from '../../utils/utils';\nimport { Component } from './Component';\n/**\n * Класс отображения корзины в модальном окне\n */\nexport class Basket extends Component {\n    constructor(container) {\n        super(container);\n        this._list = ensureElement('.basket__list', container);\n        this.orderCreateButton = ensureElement('.basket__button', container);\n        // debug here\n        this.orderCreateButton.addEventListener('click', () => {\n            console.log('open modal of form');\n        });\n    }\n    set content(value) {\n        this._list.replaceChildren(value);\n    }\n    render(data) {\n        super.render(data);\n        return this.container;\n    }\n}\n","export const API_URL = `${process.env.API_ORIGIN}/api/weblarek`;\nexport const CDN_URL = `${process.env.API_ORIGIN}/content/weblarek`;\nexport const settings = {};\nexport const TESTDATA = {\n    items: [\n        {\n            id: '11',\n            title: 'Test item',\n            description: 'This is test description',\n            category: 'test',\n            price: 900,\n            image: ''\n        },\n        {\n            id: '12',\n            title: 'Test item two',\n            description: 'This is test description',\n            category: 'test',\n            price: 0,\n            image: ''\n        },\n        {\n            id: '122',\n            title: 'Test item three',\n            description: 'This is test description',\n            category: 'new test',\n            price: 1200,\n            image: ''\n        }\n    ],\n    total: 2\n};\n","import { CDN_URL } from '../../utils/constants';\nimport { ensureElement } from '../../utils/utils';\nimport { Component } from './Component';\n/**\n * Класс карточки товара\n */\nexport class Card extends Component {\n    // addButton: HTMLButtonElement; debug here\n    constructor(container) {\n        super(container);\n        this._title = ensureElement('.card__title', container);\n        this._price = ensureElement('.card__price', container);\n        this._category = container.querySelector('.card__category');\n        this._image = container.querySelector('.card__image');\n        this._description = container.querySelector('.card__text');\n    }\n    set title(value) {\n        this.setText(this._title, value);\n    }\n    set price(value) {\n        if (!value) {\n            this.setText(this._price, `Бесценно`);\n        }\n        else {\n            this.setText(this._price, `${value} синапсов`);\n        }\n    }\n    set category(value) {\n        this.setText(this._category, value);\n    }\n    set image(value) {\n        this.setImage(this._image, `${CDN_URL}${value}`);\n    }\n    set description(value) {\n        this.setText(this._description, value);\n    }\n    render(data) {\n        super.render(data);\n        return this.container;\n    }\n}\n","import { Component } from './Component';\n/**\n * Класс отображает формы для заполнения полльзователем\n */\nexport class Form extends Component {\n    constructor(container) {\n        super(container);\n        this.submitButton = container.querySelector('.order__button');\n        // debug here\n        // this.submitButton.addEventListener('click', () => {\n        //     console.log('Далее....')\n        // })\n    }\n    set valid(value) { }\n    render(data) {\n        super.render(data);\n        return this.container;\n    }\n}\n","/**\n * Класс для отображения галереи\n */\nimport { ensureElement } from '../../utils/utils';\nimport { Component } from '../view/Component';\nexport class Gallery extends Component {\n    constructor(container) {\n        super(container);\n        this.catalog = ensureElement('.gallery', container);\n        this.basket = ensureElement('.header__basket-counter', container);\n    }\n    renderGallery(data) {\n        this.catalog.append(data);\n    } // debug here\n    renderBasket() { } // debug here\n}\n","import { ensureElement } from '../../utils/utils';\nimport { Component } from './Component';\n/**\n * Класс для отображения модальных окон\n */\nexport class Modal extends Component {\n    constructor(container) {\n        super(container);\n        this.modalContent = ensureElement('.modal__content', container);\n        this.closeButton = ensureElement('.modal__close', container);\n        this.closeButton.addEventListener('click', () => this.closeModal()); // for test only\n    }\n    set content(value) {\n        this.modalContent.replaceChildren(value);\n    }\n    openModal() {\n        this.container.classList.add('modal_active');\n    }\n    closeModal() {\n        this.container.classList.remove('modal_active');\n        this.content = null;\n    }\n    render(data) {\n        super.render(data);\n        this.openModal();\n        return this.container;\n    }\n}\n","import { ensureElement } from '../../utils/utils';\nimport { Component } from './Component';\n/**\n * Класс отображает успешный успех\n */\nexport class Poster extends Component {\n    constructor(container) {\n        super(container);\n        this.title = ensureElement('.order-success__title', container);\n        this.description = ensureElement('.order-success__description', container);\n        this.closeButton = ensureElement('.order-success__close', container);\n    }\n    render(data) {\n        super.render(data);\n        return this.container;\n    }\n}\n","import { Api } from './components/base/api';\nimport { Catalog } from './components/model/Catalog';\nimport { OrderBuilder } from './components/model/OrderBuilder';\nimport { Basket } from './components/view/Basket';\nimport { Card } from './components/view/Card';\nimport { Form } from './components/view/Form';\nimport { Gallery } from './components/view/Gallery';\nimport { Modal } from './components/view/Modal';\nimport { Poster } from './components/view/Poster';\nimport './scss/styles.scss';\nimport { API_URL, TESTDATA } from './utils/constants';\nimport { cloneTemplate, ensureElement } from './utils/utils';\n// =============================================================================\n// templates ===================================================================\nconst cardTemplate = ensureElement('#card-catalog');\nconst modalContainer = ensureElement('#modal-container');\nconst cardPreview = ensureElement('#card-preview');\nconst cardBasket = ensureElement('#card-basket');\nconst basket = ensureElement('#basket');\nconst order = ensureElement('#order');\nconst contacts = ensureElement('#contacts');\nconst success = ensureElement('#success');\n// =============================================================================\n// Экземпляры\nconst api = new Api(API_URL);\nconst builder = new OrderBuilder(); // Корзина\nbuilder\n    .addProducts(TESTDATA.items[0])\n    .addProducts(TESTDATA.items[2])\n    .addProducts(TESTDATA.items[1]);\nconst pageWrapper = ensureElement('.page__wrapper');\nconst gallery = new Gallery(pageWrapper);\nconst appData = new Catalog({ items: [], total: 0 }); // init appData\nconst modal = new Modal(modalContainer); // modal\n// =============================================================================\n// view test code\nconst cardBas = new Card(cloneTemplate(cardBasket)); // debug here\nconst cardFull = new Card(cloneTemplate(cardPreview));\n// Элемент разметки Basket\nconst basketIcon = document.querySelector('.header__basket');\nconst basketElement = new Basket(cloneTemplate(basket));\nbasketIcon.addEventListener('click', () => {\n    modal.render({\n        content: basketElement.render(),\n    });\n});\n// Элемент разметки заказа\nconst orderWindow = new Form(cloneTemplate(order));\n// modal.render({\n// \tcontent: orderWindow.render(),\n// });\n// Элемент разметки контакты\nconst contactsWindow = new Form(cloneTemplate(contacts));\n// modal.render({\n// \tcontent: contactsWindow.render(),\n// });\n// Элемент разметки Удачно\nconst successWindow = new Poster(cloneTemplate(success));\nmodal.render({\n    content: successWindow.render(),\n});\n// api\napi\n    .get('/product/')\n    .then((data) => data)\n    .then((resp) => {\n    appData.setCatalog(resp.items);\n    appData.items.forEach((item) => {\n        const card = new Card(cloneTemplate(cardTemplate));\n        card.render().addEventListener('click', () => {\n            modal.render({\n                content: cardFull.render({\n                    title: item.title,\n                    price: item.price,\n                    image: item.image,\n                    category: item.category,\n                    description: item.description,\n                }),\n            });\n        });\n        gallery.renderGallery(card.render(item));\n    });\n});\n"],"names":["Api","baseUrl","_a","options","arguments","length","undefined","_classCallCheck","this","headers","Object","assign","_createClass","key","value","handleResponse","response","ok","json","then","data","Promise","reject","error","statusText","get","uri","fetch","method","post","body","JSON","stringify","Catalog","items","itemsCount","total","setCatalog","Order","products","paymentType","deliveryAdress","email","phone","totalPrice","OrderBuilder","order","reduce","sum","element","price","addProducts","push","removeProduct","id","filter","item","setPaymentType","setDeliveryAdress","setEmail","setPhone","showOrder","console","log","createOrder","isSelector","x","ensureElement","selectorElement","context","elements","ensureAllElements","document","Array","from","querySelectorAll","NodeList","isArray","Error","warn","concat","pop","HTMLElement","cloneTemplate","query","content","firstElementChild","cloneNode","Component","container","toggleClass","className","force","classList","toggle","setText","textContent","String","setDisabled","state","setAttribute","removeAttribute","setHidden","style","display","setVisible","removeProperty","setImage","src","alt","render","Basket","_Component","_inherits","_super","_createSuper","_this","call","_list","orderCreateButton","addEventListener","set","replaceChildren","_get","_getPrototypeOf","prototype","API_URL","process","CDN_URL","TESTDATA","title","description","category","image","Card","_title","_price","_category","querySelector","_image","_description","Form","submitButton","Gallery","catalog","basket","renderGallery","append","renderBasket","Modal","modalContent","closeButton","closeModal","openModal","add","remove","Poster","cardTemplate","modalContainer","cardPreview","cardBasket","contacts","success","api","gallery","appData","modal","cardFull","basketIcon","basketElement","successWindow","resp","forEach","card"],"sourceRoot":""}